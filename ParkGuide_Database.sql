-- MySQL Script generated by MySQL Workbench
-- Tue Apr 15 10:11:51 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Parkguide` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Parkguide` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `Parkguide` ;

-- -----------------------------------------------------
-- Table `mydb`.`Assesment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Assesment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Assesment` (
  `idAssesment` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Code` VARCHAR(45) NULL,
  `Type` VARCHAR(45) NULL,
  `Description` VARCHAR(100) NULL,
  `idCourse` INT NOT NULL,
  PRIMARY KEY (`idAssesment`),
  INDEX `fk_Assesment_Course1_idx` (`idCourse` ASC) VISIBLE,
  CONSTRAINT `fk_Assesment_Course1`
    FOREIGN KEY (`idCourse`)
    REFERENCES `Parkguide`.`Course` (`idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Certificate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Certificate` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Certificate` (
  `idCertificate` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) NULL,
  `Code` VARCHAR(45) NULL,
  `Description` VARCHAR(200) NULL,
  `Status` VARCHAR(45) NULL,
  `Date_Received` DATE NULL,
  `Date_End` DATE NULL,
  `ParkLocation` VARCHAR(100) NULL DEFAULT 'semenggoh',
  `idOfficer` INT NOT NULL,
  `Trainee_id` INT NOT NULL,
  PRIMARY KEY (`idCertificate`),
  INDEX `fk_Certificate_Officer1_idx` (`idOfficer` ASC) VISIBLE,
  INDEX `fk_Certificate_Trainee1_idx` (`Trainee_id` ASC) VISIBLE,
  CONSTRAINT `fk_Certificate_Officer1`
    FOREIGN KEY (`idOfficer`)
    REFERENCES `Parkguide`.`Officer` (`idOfficer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Certificate_Trainee1`
    FOREIGN KEY (`Trainee_id`)
    REFERENCES `Parkguide`.`Trainee` (`Trainee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Course` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Course` (
  `idCourse` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Code` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `Duration` INT NULL,
  PRIMARY KEY (`idCourse`));

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Officer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Officer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Officer` (
  `idOfficer` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(200) NULL,
  `PhoneNumber` INT NULL,
  `Email` VARCHAR(50) NULL,
  `Address` VARCHAR(200) NULL,
  PRIMARY KEY (`idOfficer`));

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Officer_Assesment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Officer_Assesment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Officer_Assesment` (
  `idOfficer_Assesment` INT NOT NULL AUTO_INCREMENT,
  `Start_Date` DATE NULL,
  `End_Date` DATE NULL,
  `Status` VARCHAR(45) NULL,
  `idOfficer` INT NOT NULL,
  `idPractical_Assesment` INT NOT NULL,
  PRIMARY KEY (`idOfficer_Assesment`),
  INDEX `fk_Officer_Assesment_Officer_idx` (`idOfficer` ASC) VISIBLE,
  INDEX `fk_Officer_Assesment_Practical_Assesment1_idx` (`idPractical_Assesment` ASC) VISIBLE,
  CONSTRAINT `fk_Officer_Assesment_Officer`
    FOREIGN KEY (`idOfficer`)
    REFERENCES `Parkguide`.`Officer` (`idOfficer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Officer_Assesment_Practical_Assesment1`
    FOREIGN KEY (`idPractical_Assesment`)
    REFERENCES `Parkguide`.`Practical_Assesment` (`idPractical_Assesment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Payment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Payment` (
  `idPayment` INT NOT NULL AUTO_INCREMENT,
  `Paymentdate` DATETIME NULL,
  `Paymentcol` VARCHAR(45) NULL,
  `Trainee_id` INT NOT NULL,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_Payment_Trainee1_idx` (`Trainee_id` ASC) VISIBLE,
  CONSTRAINT `fk_Payment_Trainee1`
    FOREIGN KEY (`Trainee_id`)
    REFERENCES `Parkguide`.`Trainee` (`Trainee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Practical_Assesment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Practical_Assesment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Practical_Assesment` (
  `idPractical_Assesment` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Code` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `Duration` INT NULL,
  PRIMARY KEY (`idPractical_Assesment`));

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Trainee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Trainee` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Trainee` (
  `Trainee_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `password` TEXT(200) NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`Trainee_id`));

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Trainee_Course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Trainee_Course` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Trainee_Course` (
  `Start_Date` DATE NULL,
  `End_Date` DATE NULL,
  `Status` VARCHAR(45) NULL,
  `Trainee_id` INT NOT NULL,
  `idCourse` INT NOT NULL,
  INDEX `fk_Trainee_Course_Trainee1_idx` (`Trainee_id` ASC) VISIBLE,
  INDEX `fk_Trainee_Course_Course1_idx` (`idCourse` ASC) VISIBLE,
  CONSTRAINT `fk_Trainee_Course_Trainee1`
    FOREIGN KEY (`Trainee_id`)
    REFERENCES `Parkguide`.`Trainee` (`Trainee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Trainee_Course_Course1`
    FOREIGN KEY (`idCourse`)
    REFERENCES `Parkguide`.`Course` (`idCourse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`Trainee_Practical`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parkguide`.`Trainee_Practical` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Parkguide`.`Trainee_Practical` (
  `idTrainee_Practical` INT NOT NULL AUTO_INCREMENT,
  `Start_Date` DATE NULL,
  `End_Date` DATE NULL,
  `Status` VARCHAR(45) NULL,
  `Trainee_id` INT NOT NULL,
  `idPractical_Assesment` INT NOT NULL,
  PRIMARY KEY (`idTrainee_Practical`),
  INDEX `fk_Trainee_Practical_Trainee1_idx` (`Trainee_id` ASC) VISIBLE,
  INDEX `fk_Trainee_Practical_Practical_Assesment1_idx` (`idPractical_Assesment` ASC) VISIBLE,
  CONSTRAINT `fk_Trainee_Practical_Trainee1`
    FOREIGN KEY (`Trainee_id`)
    REFERENCES `Parkguide`.`Trainee` (`Trainee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Trainee_Practical_Practical_Assesment1`
    FOREIGN KEY (`idPractical_Assesment`)
    REFERENCES `Parkguide`.`Practical_Assesment` (`idPractical_Assesment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


COMMIT;

